cucumber: |
           default: --no-source --color --format pretty

gemfile:
  web:      |
             source 'https://rubygems.org'
             gem 'chromedriver-helper'
             gem 'pry'
             gem 'faker'
             gem 'capybara'
             gem 'cucumber'
             gem 'rspec'
             gem 'rake'
             gem 'selenium-webdriver'
             gem 'poltergeist'
             gem 'page-object'

  ios:      |

  android:  |

features:
  features_web: |
                 Feature: Validate Vilas Boas IT Tests page.

                   Background:
                   Given I am on "http://vilasboasit.com/tests.html"

                   @tag @tag1
                   Scenario: Check buttons, select box, checkbox, and fields in current page
                   And I click on "btn_one" button
                   When I select "ExampleOne" from "select_box"
                   And I check "opt_one" in check box
                   And I fill in "first_name" with "Test"
                   Then I expect to not see "#btn_one"

                   @tag @tag2
                   Scenario: Check each buttons, select box, checkbox, and fields in current page
                   And I click on each button
                   When I select "ExampleOne" from "select_box"
                   And I check each check box
                   And I fill in all fields
                   Then I expect to not see buttons in buttons panel

  step_definitions:
    steps_web: |
                Given(/^I am on "([^"]*)"$/) do |site|
                  visit(site)
                end

                Given(/^I click on "([^"]*)" button$/) do |btn|
                  click_button(btn)
                end

                When(/^I select "([^"]*)" from "([^"]*)"$/) do |option, select_box|
                  select(option, from: select_box)
                end

                When(/^I check "([^"]*)" in check box$/) do |check|
                  check(check)
                end

                When(/^I fill in "([^"]*)" with "([^"]*)"$/) do |field, value|
                  fill_in(field, with: value)
                end

                Then(/^I expect to not see "([^"]*)"$/) do |css|
                 assert_no_selector(css)
                end

                Given(/^I click on each button$/) do
                  Example.new.buttons_click
                end

                When(/^I check each check box$/) do
                  Example.new.all_check_box
                end

                When(/^I fill in all fields$/) do
                  Example.new.fill_each_fields
                end

                Then(/^I expect to not see buttons in buttons panel$/) do
                  Example.new.has_no_buttons
                end

  support:
    env_web: |
              require 'rspec'
              require 'page-object'
              require 'faker'
              require 'capybara/cucumber'
              require 'pry'
              require 'capybara/poltergeist'

              if ENV['chrome']
                Capybara.default_driver = :chrome
                Capybara.register_driver :chrome do |app|
                  Capybara::Selenium::Driver.new(app, browser: :chrome)
                end
              elsif ENV['firefox']
                Capybara.default_driver = :firefox
                Capybara.register_driver :firefox do |app|
                  Capybara::Selenium::Driver.new(app, browser: :firefox)
                end
              elsif ENV['ie']
                Capybara.default_driver = :ie
                Capybara.register_driver :ie do |app|
                  Capybara::Selenium::Driver.new(app, browser: :internet_explorer)
                end
              elsif ENV['headless_debug']
                Capybara.default_driver = :poltergeist_debug
                Capybara.register_driver :poltergeist_debug do |app|
                  Capybara::Poltergeist::Driver.new(app, inspector: true)
                end
                Capybara.javascript_driver = :poltergeist_debug
              elsif ENV['headless']
                Capybara.javascript_driver = :poltergeist
                Capybara.default_driver = :poltergeist
              else
                Capybara.default_driver = :selenium
              end

    pages:
      pages_web: |
                  class Example

                    include Capybara::DSL

                    def buttons_click
                      click_button("btn_one")
                      click_button("btn_two")
                      click_button("btn_three")
                      click_button("btn_link")
                    end

                    def all_check_box
                      check("opt_one")
                      check("opt_two")
                      check("opt_three")
                    end

                    def fill_each_fields
                      fill_in("first_name", with: "FirstTeste")
                      fill_in("mid_name", with: "MidTeste")
                      fill_in("last_name", with: "LastTeste")
                      fill_in("age", with: "20")
                      fill_in("email", with: "teste@testmail.com")
                      fill_in("job", with: "QA")
                      fill_in("gender", with: "undefined")
                    end

                    def has_no_buttons
                      assert_no_selector("#btn_one")
                      assert_no_selector("#btn_two")
                      assert_no_selector("#btn_three")
                      assert_no_selector("#btn_link")
                    end

                  end
